name: Coverage report
concurrency:
  cancel-in-progress: true
  group: cover-${{ github.ref }}

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  main:
    name: Coverage
    if: github.actor != 'dependabot[bot]'
    runs-on: ubuntu-latest
    steps:

      # required bootstrap steps (e.g. Docker package registry login, additional packages)

      - name: Checkout source
        if: github.event_name != 'pull_request'
        uses: actions/checkout@v3
      - name: Checkout pull request base
        if: github.event_name == 'pull_request'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.base.ref }}
      - name: Setup Golang with cache
        uses: flipgroup/action-golang-with-cache@main
        with:
          version: ~1.17
      - name: Generate Golang source hash base
        id: hash-base
        run: echo "::set-output name=value::${{ hashFiles('**/*.go') }}"
      - name: Cache base cover profile
        id: cache-base
        uses: actions/cache@v3
        with:
          path: cover-${{ steps.hash-base.outputs.value }}.profile
          key: cover-profile-${{ steps.hash-base.outputs.value }}
      - name: Generate base cover profile
        if: steps.cache-base.outputs.cache-hit != 'true'

        # generate base cover profile
        # example:
        # > env:
        # >   GOFLAGS: -cover -coverprofile=cover-${{ steps.hash-base.outputs.value }}.profile
        # > run: make test

      - name: Checkout source
        if: github.event_name == 'pull_request'
        uses: actions/checkout@v3
        with:
          clean: false
      - name: Generate Golang source hash head
        if: github.event_name == 'pull_request'
        id: hash-head
        run: echo "::set-output name=value::${{ hashFiles('**/*.go') }}"
      - name: Cache head cover profile
        if: |
          github.event_name == 'pull_request' &&
          steps.hash-base.outputs.value != steps.hash-head.outputs.value
        id: cache-head
        uses: actions/cache@v3
        with:
          path: cover-${{ steps.hash-head.outputs.value }}.profile
          key: cover-profile-${{ steps.hash-head.outputs.value }}
      - name: Generate head cover profile
        if: |
          github.event_name == 'pull_request' &&
          steps.hash-base.outputs.value != steps.hash-head.outputs.value &&
          steps.cache-head.outputs.cache-hit != 'true'

        # generate head cover profile
        # example:
        # > env:
        # >   GOFLAGS: -cover -coverprofile=cover-${{ steps.hash-head.outputs.value }}.profile
        # > run: make test

      - name: Fetch goverdiff @main SHA-1
        id: goverdiff-main
        run: |
          sha1=$(curl \
            --header "Accept: application/vnd.github.v3+json" \
            --silent \
              https://api.github.com/repos/flipgroup/goverdiff/branches/main | \
                jq --raw-output ".commit.sha")
          echo "::set-output name=sha1::$sha1"
      - name: Cache goverdiff
        id: cache-goverdiff
        uses: actions/cache@v3
        with:
          path: ~/go/bin/goverdiff
          key: ${{ runner.os }}-cover-goverdiff-sha1-${{ steps.goverdiff-main.outputs.sha1 }}
      - name: Install goverdiff
        if: steps.cache-goverdiff.outputs.cache-hit != 'true'
        run: go install github.com/flipgroup/goverdiff@main
      - name: Run goverdiff
        if: github.event_name == 'pull_request'
        env:
          GITHUB_PULL_REQUEST_ID: ${{ github.event.number }}
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          goverdiff \
            cover-${{ steps.hash-base.outputs.value }}.profile \
            cover-${{ steps.hash-head.outputs.value }}.profile
